- add grouping of port ranges in efficient way

- add greater/then lesser/then to the language

- add 'log' (disable not needed, just comment out the policy line)

- 1 input policy will generate two ACLs, one for IPv4 and one for IPv6
    * in config decide what the v4 or v6 suffix/prefix is

- add the concept of a 'hack' (manual non-compiled ACL, useful for migrations)

- add /etc/aclhound.conf and ~/.aclhound.conf files parsing

- add IOS support (should be almost same as ASA)

- add Juniper support (comes after all other features are done)

aclhound init
    - check if /etc/aclhound.conf exists, take defaults from there
    - ask where to store aclhound files, suggest ~/aclhound

aclhound build-all [ directory ]
    - if no dir specified:
        - create temp dir, compile all configs, store them there
    - compile all configs, store them in directory

aclhound build <file> [ vendor ]
    - file can be either a device file or a policy file
    - if policy file:
        - require vendor 
    - print to stdout

aclhould diff-all
    - branch to previous commit
    - compile all, dump in tmpdir/b
    - checkout head again
    - compile all, dump in tmpdir/b
    - produce unified diff and run through ${PAGER}

aclhound diff <file> [ vendor ]
    - branch to previous commit
    - compile for file (if device just proceed, if policy require vendor)
    - checkout head again
    - compile file
    - produce unified diff

aclhound fetch
    - git pull & rebase

aclhound submit
    - do diff-all
    - git-review

aclhound force-deploy
    - warn that the reviewed version will be pushed, not the local version
    - trigger jenkins job
